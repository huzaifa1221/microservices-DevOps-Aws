name: api-gateway

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

  push:
    branches:
      - main
    paths:
      - 'helm/api-gateway/**'
      - 'services/api-gateway/**'

jobs:
  build-and-push:
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: microservices-${{ github.event.inputs.environment || 'dev' }}
      IMAGE_TAG: api-gateway
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build, Tag, and Push Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ steps.vars.outputs.short_sha }} services/api-gateway
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ steps.vars.outputs.short_sha }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Deploy using Helm
        env:
          KUBERNETES_NAMESPACE: ${{ github.event.inputs.environment || 'dev' }}
          HELM_RELEASE_NAME: api-gateway
          HELM_CHART_PATH: helm/api-gateway
          HELM_VALUES_FILE: ./helm/api-gateway/values-${{ github.event.inputs.environment || 'dev' }}.yaml
        run: |
          helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_PATH \
            --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
            --set image.tag=$IMAGE_TAG-${{ steps.vars.outputs.short_sha }} \
            --namespace $KUBERNETES_NAMESPACE \
            -f $HELM_VALUES_FILE